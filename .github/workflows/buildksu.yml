name: Build Magisk on WSA

on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'Target architecture'
        required: true
        type: choice
        default: 'x64'
        options:
          - x64
          - arm64
      release_type:
        description: 'WSA release channel'
        required: true
        type: choice
        default: 'Retail'
        options:
          - latest
          - WIF
          - WIS
          - RP
          - Retail
      root_sol:
        description: 'Rooting solution'
        required: true
        type: choice
        default: 'kernelsu'
        options:
          - kernelsu
          - none
      gapps_brand:
        description: 'Google Apps package'
        required: true
        type: choice
        default: 'MindTheGapps'
        options:
          - MindTheGapps
          - none
      custom_model:
        description: 'Device to emulate (for Play Store)'
        required: true
        type: choice
        default: 'lynx'
        options:
          - none
          - sunfish       # Google Pixel 4a
          - bramble       # Google Pixel 4a (5G)
          - barbet        # Google Pixel 5a
          - redfin        # Google Pixel 5
          - bluejay       # Google Pixel 6a
          - oriole        # Google Pixel 6
          - raven         # Google Pixel 6 Pro
          - lynx          # Google Pixel 7a
          - panther       # Google Pixel 7
          - cheetah       # Google Pixel 7 Pro
          - tangorpro     # Google Pixel Tablet
      compress_format:
        description: 'Compression format for the final archive'
        required: true
        type: choice
        default: '7z'
        options:
          - 7z
          - zip
      remove_amazon:
        description: 'Remove the Amazon Appstore?'
        required: true
        type: boolean
        default: true

jobs:
  build:
    name: Build WSA with Magisk and GApps
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Project Code ‚ôªÔ∏è
        uses: actions/checkout@v4
        with:
          repository: 'WSABuilds/MagiskOnWSALocal'
          path: 'MagiskOnWSALocal'

      - name: Verify Inputs üìã
        run: |
          echo "Build Configuration:"
          echo "  ARCH:             ${{ github.event.inputs.arch }}"
          echo "  RELEASE_TYPE:     ${{ github.event.inputs.release_type }}"
          echo "  ROOT_SOL:         ${{ github.event.inputs.root_sol }}"
          echo "  MAGISK_VER:       ${{ github.event.inputs.magisk_ver }}"
          echo "  GAPPS_BRAND:      ${{ github.event.inputs.gapps_brand }}"
          echo "  CUSTOM_MODEL:     ${{ github.event.inputs.custom_model }}"
          echo "  COMPRESS_FORMAT:  ${{ github.event.inputs.compress_format }}"
          echo "  REMOVE_AMAZON:    ${{ github.event.inputs.remove_amazon }}"

      - name: Install System Dependencies üì¶
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            lzip patchelf e2fsprogs python3 aria2 attr unzip sudo \
            qemu-utils python3-venv python3-pip p7zip-full jq

      - name: Install Python Dependencies üêç
        working-directory: MagiskOnWSALocal/scripts
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build WSA Package üèóÔ∏è
        working-directory: MagiskOnWSALocal/scripts
        run: |
          # Conditionally add the --remove-amazon flag
          AmazonFlag=""
          if [[ "${{ github.event.inputs.remove_amazon }}" == "true" ]]; then
            AmazonFlag="--remove-amazon"
          fi

          # Run the main build script with all the selected options
          sudo ./run.sh \
            --arch "${{ github.event.inputs.arch }}" \
            --release-type "${{ github.event.inputs.release_type }}" \
            --magisk-ver "${{ github.event.inputs.magisk_ver }}" \
            --gapps-brand "${{ github.event.inputs.gapps_brand }}" \
            --custom-model "${{ github.event.inputs.custom_model }}" \
            --root-sol "${{ github.event.inputs.root_sol }}" \
            --compress-format "${{ github.event.inputs.compress_format }}" \
            $AmazonFlag

      - name: Upload Build Artifact üì§
        uses: actions/upload-artifact@v4
        with:
          name: WSA-Build-${{ github.event.inputs.arch }}-${{ github.run_id }}
          path: MagiskOnWSALocal/output/
          if-no-files-found: error
